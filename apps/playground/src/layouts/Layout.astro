---
// Component
import CookieController from "../components/CookieController.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<main>
			<slot />
		</main>
		<CookieController />

		<script>
			import { events } from "@lucidclient/elements/handlers";
			import Elements, { storeModule, registerHandler, createSignal } from "@lucidclient/elements";
			import { speculateLinks, PrefetchData } from "@lucidclient/speculate";

			registerHandler(events);

			storeModule<
				{
					boolean: boolean;
					number: number;
					string: string;
					// object: Record<string, string>;
					// array: Array<string>;
					customState: string;
				},
				{
					init: () => void;
					handleClick: () => void;
				}
			>("exampleStore", (store) => ({
				state: {
					customState: createSignal("hello world"),
				},
				actions: {
					init() {
						store.actions.handleClick(); // or this.handleClick()
					},
					handleClick: () => {
						const [_, setBoolean] = store.state.boolean;
						console.log('handleClick');
						// const [getNumber] = store.state.number;
						// const [getString] = store.state.string;
						// const [getObject] = store.state.object;
						// const [getArray] = store.state.array;
						// const [getCustomState] = store.state.customState;

						// setInterval(() => {
						// 	console.log(getDisabled());
						// }, 1000);

						// console.log(getBoolean());
						// console.log(getNumber());
						// console.log(getString());
						// console.log(getObject());
						// console.log(getArray());
						// console.log(getCustomState());

						// console.log(store.refs.get('button'))
						setBoolean((prev) => !prev);
					},
				},
			}));

			Elements.start({
				debug: true,
			});

			speculateLinks();
			new PrefetchData({
				target: "#load-data-prefetch",
				fetch: async () => {
					return fetch("https://api.sampleapis.com/wines/reds").then(
						(res) => res.json(),
					) as Promise<
						Array<{
							winery: string;
							wine: string;
							rating: {
								average: string;
								reviews: string;
							};
							location: string;
							image: string;
							id: number;
						}>
					>;
				},
				onClick: (data) => {
					console.log(data);
				},
				staletime: 10000,
			});

			const loadmore = document.querySelector("#load-data");
			if (loadmore) {
				loadmore?.addEventListener("click", async () => {
					const data = await fetch(
						"https://api.sampleapis.com/wines/reds",
					).then((res) => res.json());
					console.log(data);
				});
			}
		</script>
	</body>
</html>
